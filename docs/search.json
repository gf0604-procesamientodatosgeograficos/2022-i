[{"path":"index.html","id":"bienvenida","chapter":"Bienvenida","heading":"Bienvenida","text":"Este es un curso introductorio al procesamiento de datos geográficos mediante el lenguaje de programación R. Se imparte en la Escuela de Geografía de la Universidad de Costa Rica.Se estudian los fundamentos de R, sus bibliotecas geoespaciales y sus capacidades para generar gráficos estadísticos. También se utilizan herramientas para facilitar la reproducibilidad de los procedimientos y su comunicación través de la Internet y otros medios.El enfoque del curso es teórico-práctico, con lecciones teóricas combinadas con ejercicios de programación en los cuales los estudiantes aplican en diversos escenarios de procesamiento de datos los conocimientos y habilidades aprendidas. se requiere de experiencia previa en programación de computadoras.Este sitio web corresponde al curso impartido durante el primer ciclo lectivo de 2022. Para consultar las versiones de otros ciclos lectivos, puede visitar el sitio web general del curso.Información de contactoSi tiene alguna pregunta o comentario sobre este curso, por favor contacte :Manuel Vargas - manuel.vargas_d@ucr.ac.cr\nProfesor\nUniversidad de Costa Rica,\nCiudad Universitaria Rodrigo Facio,\nSan Pedro de Montes de Oca,\nCosta Rica.Los contenidos de este curso, menos que se especifique de otra forma, se comparten mediante una licencia de Creative Commons Reconocimiento-CompartirIgual 4.0 Internacional.","code":""},{"path":"programa-del-curso.html","id":"programa-del-curso","chapter":"Programa del curso","heading":"Programa del curso","text":"Programa del grupo 001Programa del grupo 002","code":""},{"path":"pensamiento-computacional.html","id":"pensamiento-computacional","chapter":"1 Pensamiento computacional","heading":"1 Pensamiento computacional","text":"","code":""},{"path":"pensamiento-computacional.html","id":"resumen","chapter":"1 Pensamiento computacional","heading":"1.1 Resumen","text":"El pensamiento computacional es un enfoque para la resolución de problemas basado en conceptos y métodos de las ciencias de la computación. Los principios fundamentales del pensamiento computacional son:Descomposición: división de un problema en subproblemas más pequeños.Reconocimiento de patrones: búsqueda de similitudes en los problemas.Abstracción: identificación de la información que se necesita y filtrado de la que se necesita para resolver un problema.Algoritmos: descripción, paso por paso, de la solución un problema.","code":""},{"path":"pensamiento-computacional.html","id":"diapositivas","chapter":"1 Pensamiento computacional","heading":"1.2 Diapositivas","text":"Introducción al pensamiento computacional (diapositivas)","code":""},{"path":"pensamiento-computacional.html","id":"recursos-de-interés","chapter":"1 Pensamiento computacional","heading":"1.3 Recursos de interés","text":"Harvard University. (2022). CS50’s Introduction Computer Science. EdX. https://www.edx.org/course/introduction-computer-science-harvardx-cs50xWing, J. M. (2006). Computational thinking. Communications ACM, 49(3), 33-35. https://doi.org/10.1145/1118178.1118215. Disponible en https://www.cs.cmu.edu/~15110-s13/Wing06-ct.pdf.","code":""},{"path":"arquitectura-de-computadoras-y-lenguajes-de-programación.html","id":"arquitectura-de-computadoras-y-lenguajes-de-programación","chapter":"2 Arquitectura de computadoras y lenguajes de programación","heading":"2 Arquitectura de computadoras y lenguajes de programación","text":"","code":""},{"path":"arquitectura-de-computadoras-y-lenguajes-de-programación.html","id":"resumen-1","chapter":"2 Arquitectura de computadoras y lenguajes de programación","heading":"2.1 Resumen","text":"Las computadoras modernas están construídas con base en circuitos integrados (CI), también llamados chips o microchips. Los CI procesan información digital (que usa valores discretos), la cual generalmente es binaria (.e. de dos valores). Los CI de una computadora procesan dos estados correspondientes dos niveles de tensión eléctrica: alto y bajo. Estos estados se representan con 0 y 1. Esto facilita la aplicación de la lógica binaria y de la aritmética binaria.Durante el período entre las guerras mundiales, Allan Turing desarrolló la máquina de Turing, un dispositivo teórico que manipula símbolos de una cinta de acuerdo con una tabla de reglas. La máquina de Turing simula el funcionamiento de un algoritmo y los conceptos de entrada, procesamiento y salida. En 1945, John von Neumann propuso un concepto conocido como programa almacenado, en el cual los datos y los programas se almacenan en una estructura llamada memoria, separada del hardware que ejecuta las instrucciones. Este modelo permite que las computadoras sean más fáciles de reprogramar y es conocido actualmente como arquitectura de von Neumann.El lenguaje máquina es un conjunto de instrucciones binarias interpretables por un CPU. Las instrucciones representan acciones ser ejecutadas por la computadora. Cada CPU tiene su propio lenguaje máquina. Un programa consiste de una secuencia de instrucciones en lenguaje máquina.Debido que programar una computadora en lenguaje máquina es excesivamente lento y complicado, en la década de 1950 comenzaron crearse lenguajes de programación que, en lugar de unos y ceros, consisten de instrucciones formadas por palabras, usualmente en idioma inglés. Existe una gran variedad de lenguajes de programación que han sido creados con diversos fines: científicos, comerciales, educacionales, etc.","code":""},{"path":"arquitectura-de-computadoras-y-lenguajes-de-programación.html","id":"diapositivas-1","chapter":"2 Arquitectura de computadoras y lenguajes de programación","heading":"2.2 Diapositivas","text":"Arquitectura de computadoras y lenguajes de programación (diapositivas)","code":""},{"path":"interacción-humano-computadora.html","id":"interacción-humano-computadora","chapter":"3 Interacción humano-computadora","heading":"3 Interacción humano-computadora","text":"","code":""},{"path":"interacción-humano-computadora.html","id":"resumen-2","chapter":"3 Interacción humano-computadora","heading":"3.1 Resumen","text":"La interacción humano-computadora (IHC) es un área de investigación dedicada al diseño y uso de la tecnología computacional. Esta interacción se realiza través de interfaces entre personas (usuarios) y computadoras. La IHC se sitúa en la intersección de varias disciplinas que incluyen ciencias de la computación, ciencias de la conducta, diseño y estudios de medios, entre otras.La IHC enfatiza que, diferencia de otras máquinas y herramientas con usos más limitados, las computadoras tienen aplicaciones muy diversas que implican un “diálogo” más complejo con los usuarios.","code":""},{"path":"interacción-humano-computadora.html","id":"interfaces-de-usuario","chapter":"3 Interacción humano-computadora","heading":"3.2 Interfaces de usuario","text":"La interfaz de usuario es el medio con el que el usuario puede comunicarse con una computadora (o, en general, con cualquier máquina o dispositivo), y comprende todos las formas de interacción entre esta y el usuario. Idealmente, las interfaces de usuario se diseñan para que sean fáciles de entender y de utilizar.Las interfaces de usuario pueden clasificarse en tres tipos: interfaces de línea de comandos (CLI, del inglés, command-line interface), interfaces gráficas de usuario (GUI, del inglés, graphical user interface) e interfaces naturales de usuario (NUI, del inglés, natural user interface).","code":""},{"path":"interacción-humano-computadora.html","id":"interfaces-de-línea-de-comandos","chapter":"3 Interacción humano-computadora","heading":"3.2.1 Interfaces de línea de comandos","text":"Las interfaces de línea de comandos (CLI) permiten los usuarios dar indicaciones la computadora por medio de líneas de texto correspondientes comandos o instrucciones (ej. al sistema operativo) (vea la figura 3.1). Los comandos pueden introducirse interactivamente en algún tipo de entrada de texto (ej. el prompt de un sistema operativo) o, de manera más automatizada, través de un archivo (ej. un script).\nFigure 3.1: Terminal (CLI) del sistema operativo Ubuntu (Linux).\nEste tipo de interfaz existe casi desde los inicios de la computación y es superada en antigüedad solo por las tarjetas perforadas y otros mecanismos similares.Las CLI tienen la ventaja de que facilitan el desarrollo de procedimientos reproducibles y repetibles. Por otro lado, puede ser más complejas, especialmente para usuarios experimentados.","code":""},{"path":"interacción-humano-computadora.html","id":"interfaces-gráficas-de-usuario","chapter":"3 Interacción humano-computadora","heading":"3.2.2 Interfaces gráficas de usuario","text":"Las interfaces gráficas de usuario (GUI) utilizan imágenes y otros objetos gráficos (ej. iconos) para representar la información y las acciones disponibles en la interfaz. Surgieron como una evolución de las CLI. Por ejemplo, muchos sistemas operativos desarrollaron primero sus CLI y luego GUI que permiten realizar acciones equivalentes los comandos de las CLI. La figura 3.2 muestra la interfaz gráfica del sistema operativo Ubuntu (Linux).\nFigure 3.2: Interfaz gráfica GNOME del sistema operativo Ubuntu (Linux).\nComo un precursor de las actuales GUI, suele mencionarse una interfaz de hipervículos desarrollada en el Stanford Research Institute, en la década de 1960 (se recomienda ver Mother Demos, presented Douglas Engelbart (1968)). Este concepto fue ampliado y trasladado un entorno gráfico por los investigadores del Xerox PARC, en Palo Alto. Ahí se introdujeron conceptos como ventanas, casillas de verificación (checkboxes), botones de radio, menús y puntero del ratón. La interfaz fue implementada comercialmente en el computador Xerox Star 8010, en 1981.Las GUI son más amigables e intuitivas que las CLI, pero también pueden ser menos versátiles y menos aptas para reproducir procedimientos.","code":""},{"path":"interacción-humano-computadora.html","id":"interfaces-naturales-de-usuario","chapter":"3 Interacción humano-computadora","heading":"3.2.3 Interfaces naturales de usuario","text":"En las interfaces naturales de usuario (NUI), este interactúa con la computadora sin utilizar dispositivos como el ratón o el teclado, sino través de movimientos, gestos o la voz. Las NUI requieren que el usuario aprenda el uso de nuevas tecnologías, ya que puede utilizar medios ya conocidos.","code":""},{"path":"interacción-humano-computadora.html","id":"recursos-de-interés-1","chapter":"3 Interacción humano-computadora","heading":"3.3 Recursos de interés","text":"Marcel. (2012). Mother Demos, presented Douglas Engelbart (1968). https://www.youtube.com/watch?v=yJDv-zdhzMY","code":""},{"path":"gdalogr-biblioteca-para-lectura-y-escritura-de-datos-geoespaciales.html","id":"gdalogr-biblioteca-para-lectura-y-escritura-de-datos-geoespaciales","chapter":"4 GDAL/OGR: biblioteca para lectura y escritura de datos geoespaciales","heading":"4 GDAL/OGR: biblioteca para lectura y escritura de datos geoespaciales","text":"","code":""},{"path":"gdalogr-biblioteca-para-lectura-y-escritura-de-datos-geoespaciales.html","id":"resumen-3","chapter":"4 GDAL/OGR: biblioteca para lectura y escritura de datos geoespaciales","heading":"4.1 Resumen","text":"Se introduce la biblioteca GDAL/OGR para lectura y escritura de datos geoespaciales y se muestran varios ejemplos de su uso través de los programas para la línea de comandos del sistema operativo.","code":""},{"path":"gdalogr-biblioteca-para-lectura-y-escritura-de-datos-geoespaciales.html","id":"trabajo-previo","chapter":"4 GDAL/OGR: biblioteca para lectura y escritura de datos geoespaciales","heading":"4.2 Trabajo previo","text":"","code":""},{"path":"gdalogr-biblioteca-para-lectura-y-escritura-de-datos-geoespaciales.html","id":"lecturas","chapter":"4 GDAL/OGR: biblioteca para lectura y escritura de datos geoespaciales","heading":"4.2.1 Lecturas","text":"Pebesma, E., Wagner, W., Verbesselt, J., Goor, E., Briese, C., & Neteler, M. (2016). OpenEO: GDAL Earth Observation Analytics. https://r-spatial.org/2016/11/29/openeo.html","code":""},{"path":"gdalogr-biblioteca-para-lectura-y-escritura-de-datos-geoespaciales.html","id":"tutoriales","chapter":"4 GDAL/OGR: biblioteca para lectura y escritura de datos geoespaciales","heading":"4.2.2 Tutoriales","text":"Gandhi, U. (2020). Mastering GDAL Tools. Spatial Thoughts. https://spatialthoughts.com/courses/mastering-gdal-tools/","code":""},{"path":"gdalogr-biblioteca-para-lectura-y-escritura-de-datos-geoespaciales.html","id":"descripción-general","chapter":"4 GDAL/OGR: biblioteca para lectura y escritura de datos geoespaciales","heading":"4.3 Descripción general","text":"Geospatial Data Abstraction Library (GDAL) es una biblioteca para leer y escribir datos geoespaciales en formatos raster y vectoriales. GDAL se refiere la funcionalidad para datos raster y OGR (sigla antes usada para OpenGIS Simple Features Reference Implementation) la correspondiente datos vectoriales. En ocasiones, se utiliza la sigla GDAL (sin OGR) para referirse la funcionalidad para ambos modelos de datos. GDAL es distribuida por la Open Source Geospatial Foundation (OSGeo) con una licencia X/MIT.GDAL/OGR cuenta con un único modelo abstracto de datos raster y un único modelo abstracto de datos vectoriales, lo que permite programar aplicaciones geoespaciales sin tener que ocuparse de las particularidades de cada formato que se utilice (GeoTIFF, NetCDF, ESRI Shapefile, GeoPackage, GeoJSON, etc.).pesar de que GDAL/OGR está programada en C/C++, cuenta con una interfaz de programación de aplicaciones (API, en inglés, Application Programming Interface) para varios lenguajes de programación, incluyendo C, C++, Python y Java. Además, ofrece un conjunto de programas para la línea de comandos del sistema operativo cuyas distribuciones binarias están disponibles para varios sistemas operativos, incluyendo Windows, macOS y Linux. Estas API y los programas también están incluídos en la plataforma de ciencia de datos Anaconda, la cual puede instalarse en todos los sistemas operativos mencionados.","code":""},{"path":"gdalogr-biblioteca-para-lectura-y-escritura-de-datos-geoespaciales.html","id":"programas-para-la-línea-de-comandos-del-sistema-operativo","chapter":"4 GDAL/OGR: biblioteca para lectura y escritura de datos geoespaciales","heading":"4.4 Programas para la línea de comandos del sistema operativo","text":"Los programas de GDAL/OGR para la línea de comandos del sistema operativo permiten ejecutar tareas de geoprocesamiento y de conversión entre formatos geoespaciales sin utilizar una interfaz gráfica o un lenguaje de programación.","code":""},{"path":"gdalogr-biblioteca-para-lectura-y-escritura-de-datos-geoespaciales.html","id":"instalación","chapter":"4 GDAL/OGR: biblioteca para lectura y escritura de datos geoespaciales","heading":"4.4.1 Instalación","text":"En el sitio web de GDAL se describen varias opciones para su descarga e instalación, incluyendo archivos binarios ejecutables para varias plataformas.En el caso del sistema operativo Windows, estos programas se incluyen en la aplicación OSGeo4W, la cual puede instalarse junto con el sistema de información geográfica de escritorio QGIS. Se recomienda usar el instalador de red OSGeo4W.","code":""},{"path":"gdalogr-biblioteca-para-lectura-y-escritura-de-datos-geoespaciales.html","id":"consideraciones-generales","chapter":"4 GDAL/OGR: biblioteca para lectura y escritura de datos geoespaciales","heading":"4.4.2 Consideraciones generales","text":"Los programas de GDAL comparten una serie de opciones comunes para datos raster y de opciones comunes para datos vectoriales que pueden visualizarse con la opción -- help-general. Por ejemplo:Para obtener ayuda acerca de un comando particular, puede usarse la opción -- help. Por ejemplo:","code":"ogrinfo --help-generalGeneric GDAL utility command options:\n  --version: report version of GDAL in use.\n  --license: report GDAL license info.\n  --formats: report all configured format drivers.\n  --format [format]: details of one format.\n  --optfile filename: expand an option file into the argument list.\n  --config key value: set system configuration option.\n  --debug [on/off/value]: set debug level.\n  --pause: wait for user input, time to attach debugger\n  --locale [locale]: install locale for debugging (i.e. en_US.UTF-8)\n  --help-general: report detailed help on general options.ogrinfo --helpUsage: ogrinfo [--help-general] [-ro] [-q] [-where restricted_where|@filename]\n               [-spat xmin ymin xmax ymax] [-geomfield field] [-fid fid]\n               [-sql statement|@filename] [-dialect sql_dialect] [-al] [-rl] [-so] [-fields={YES/NO}]\n               [-geom={YES/NO/SUMMARY}] [[-oo NAME=VALUE] ...]\n               [-nomd] [-listmdd] [-mdd domain|`all`]*\n               [-nocount] [-noextent] [-nogeomtype] [-wkt_format WKT1|WKT2|...]\n               [-fielddomain name]\n               datasource_name [layer [layer ...]]"},{"path":"gdalogr-biblioteca-para-lectura-y-escritura-de-datos-geoespaciales.html","id":"ejemplos-de-uso","chapter":"4 GDAL/OGR: biblioteca para lectura y escritura de datos geoespaciales","heading":"4.4.3 Ejemplos de uso","text":"En esta sección, se presentan ejemplos de uso de los programas, tanto para datos vectoriales como para datos raster.","code":""},{"path":"gdalogr-biblioteca-para-lectura-y-escritura-de-datos-geoespaciales.html","id":"programas-para-datos-vectoriales","chapter":"4 GDAL/OGR: biblioteca para lectura y escritura de datos geoespaciales","heading":"4.4.3.1 Programas para datos vectoriales","text":"","code":""},{"path":"gdalogr-biblioteca-para-lectura-y-escritura-de-datos-geoespaciales.html","id":"ogrinfo","chapter":"4 GDAL/OGR: biblioteca para lectura y escritura de datos geoespaciales","heading":"4.4.3.1.1 ogrinfo","text":"El programa ogrinfo despliega información acerca de una fuente de datos vectoriales.Los siguientes comandos despliegan información sobre la capa de países de Natural Earth, tanto para el formato comprimido (ZIP) como para el formato shapefile (SHP). En el caso comprimido, note el uso de /vsizip/, para sistemas de archivos virtuales.Cree una nueva carpeta (ej. ejemplos-uso-gdal) para almacenar los archivos con los que trabajará.Descargue en la nueva carpeta la capa de paises desde la dirección https://www.naturalearthdata.com/http//www.naturalearthdata.com/download/110m/cultural/ne_110m_admin_0_countries.zip.Descomprima el archivo ZIP (lo borre).Con una herramienta de escritorio (ej. QGIS), visualice tanto el archivo ZIP como el SHP.Desde una interfaz de línea de comandos (ej. OSGeo4W Shell), ubíquese en la carpeta que creó y ejecute los siguientes comandos para obtener información sobre ambos archivos:¿Qué información despliegan ambos comandos? ¿Qué efectos produce el uso de las opciones -al y -? Revise la documentación sobre estas opciones y pruebe los comandos omitiendo cada una y ambas.Ejecute los siguientes comandos para filtrar registros de acuerdo con expresiones lógicas (booleana).Note el uso del operador (y), el cuál es un operador lógico, así como el (o) y el ().","code":" # Información sobre la capa comprimida en formato ZIP\nogrinfo -al -so /vsizip/ne_110m_admin_0_countries.zip\n\n# Información sobre la capa descomprimida en formato shapefile\nogrinfo -al -so ne_110m_admin_0_countries.shp# Registros (países y otros territorios) del continente 'Oceania' (se omite el campo de la geometría)\nogrinfo -al -where \"CONTINENT='Oceania'\" -geom=NO ne_110m_admin_0_countries.shp\n\n# Registros de Oceanía de tipo país ('Country')\nogrinfo -al -where \"CONTINENT='Oceania' AND TYPE='Country'\" -geom=NO ne_110m_admin_0_countries.shp"},{},{"path":"gdalogr-biblioteca-para-lectura-y-escritura-de-datos-geoespaciales.html","id":"ejercicios","chapter":"4 GDAL/OGR: biblioteca para lectura y escritura de datos geoespaciales","heading":"4.4.4 Ejercicios","text":"De la capa de países de Natural Earth, extraiga los registros con población estimada superior mil millones. En la capa resultante, incluya solamente los campos de nombre del país en español y población estimada.De la capa de cantones de Costa Rica, extraiga en un archivo GeoJSON los cantones de las provincia de Guanacaste, Puntarenas y Limón.De la capa de cantones de Costa Rica, extraiga en un archivo GeoJSON los cantones con área mayor o igual 2000 km2.De la capa de cantones de Costa Rica, extraiga en un archivo GeoJSON los cantones con área mayor o igual 2000 km2 de la provincia de Limón.","code":""},{"path":"gdalogr-biblioteca-para-lectura-y-escritura-de-datos-geoespaciales.html","id":"recursos-de-interés-2","chapter":"4 GDAL/OGR: biblioteca para lectura y escritura de datos geoespaciales","heading":"4.5 Recursos de interés","text":"Codecademy. (s. f.). Command Line Tutorial: Learn Command Line. Codecademy. Recuperado 19 de marzo de 2022, de https://www.codecademy.com/learn/learn--command-lineGandhi, U. (2020). Mastering GDAL Tools. Spatial Thoughts. https://spatialthoughts.com/courses/mastering-gdal-tools/Pebesma, E., Wagner, W., Verbesselt, J., Goor, E., Briese, C., & Neteler, M. (2016). OpenEO: GDAL Earth Observation Analytics. https://r-spatial.org/2016/11/29/openeo.htmlSS64 Command line reference. (s. f.). Recuperado 3 de abril de 2022, de https://ss64.com/","code":""},{"path":"conjuntos-de-datos.html","id":"conjuntos-de-datos","chapter":"Conjuntos de datos","heading":"Conjuntos de datos","text":"La siguiente es la lista de conjuntos de datos utilizados en el curso, ordenados por el nombre de la institución o iniciativa que los comparte.","code":""},{"path":"conjuntos-de-datos.html","id":"instituto-geográfico-nacional-ign","chapter":"Conjuntos de datos","heading":"Instituto Geográfico Nacional (IGN)","text":"","code":""},{"path":"conjuntos-de-datos.html","id":"delimitación-territorial-administrativa","chapter":"Conjuntos de datos","heading":"Delimitación territorial administrativa","text":"ProvinciasCantonesDistritos","code":""}]
